"use strict";

var _require = require('datocms-client'),
    localizedRead = _require.localizedRead;

var _require2 = require('humps'),
    camelize = _require2.camelize;

var buildTextNode = require('./buildTextNode');

var itemNodeId = require('./itemNodeId');

module.exports = function addField(root, key, entity, field, node, entitiesRepo, i18n, additionalNodesToCreate) {
  var additionalNodesPrefix = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : '';
  var value = localizedRead(entity, camelize(field.apiKey), field.localized, i18n);

  switch (field.fieldType) {
    case 'link':
      {
        root["".concat(key, "___NODE")] = itemNodeId(value, i18n.locale, entitiesRepo);
        break;
      }

    case 'rich_text':
    case 'links':
      {
        root["".concat(key, "___NODE")] = (value || []).map(function (id) {
          return itemNodeId(id, i18n.locale, entitiesRepo);
        });
        break;
      }

    case 'text':
      {
        var mediaType = 'text/plain';

        if (field.appeareance.editor === 'markdown') {
          mediaType = 'text/markdown';
        } else if (field.appeareance.editor === 'wysiwyg') {
          mediaType = 'text/html';
        }

        var textNode = buildTextNode(node, additionalNodesPrefix + key, value, mediaType);
        additionalNodesToCreate.push(textNode);
        root["".concat(key, "Node___NODE")] = textNode.id;
        root[key] = value;
        break;
      }

    case 'file':
      {
        if (value) {
          root[key] = {
            alt: value.alt,
            title: value.title,
            customData: value.customData,
            uploadId___NODE: "DatoCmsAsset-".concat(value.uploadId),
            locale: i18n.locale
          };
        }

        break;
      }

    case 'gallery':
      {
        root[key] = (value || []).map(function (v) {
          return {
            alt: v.alt,
            title: v.title,
            customData: v.customData,
            uploadId___NODE: "DatoCmsAsset-".concat(v.uploadId),
            locale: i18n.locale
          };
        });
        break;
      }

    case 'seo':
      {
        if (value) {
          root[key] = {
            title: value.title,
            description: value.description,
            twitterCard: value.twitterCard,
            image___NODE: value.image && "DatoCmsAsset-".concat(value.image)
          };
        }

        break;
      }

    case 'json':
      {
        if (value) {
          root[key] = JSON.parse(value);
        }

        break;
      }

    default:
      {
        root[key] = value;
        break;
      }
  }
};